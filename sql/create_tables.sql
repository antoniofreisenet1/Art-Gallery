DROP TABLE IF EXISTS photos;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
	userId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	firstName VARCHAR(128) NOT NULL,
	lastName VARCHAR(128) NOT NULL,
	telephone VARCHAR(32) NOT NULL,
	email VARCHAR(128) NOT NULL UNIQUE,
	username VARCHAR(64) UNIQUE NOT NULL UNIQUE,
	password VARCHAR(256) NOT NULL,
	avatarUrl VARCHAR(512)
);

CREATE TABLE photos (
	photoId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(128) NOT NULL,
	description VARCHAR(512),
	date DATETIME DEFAULT CURRENT_TIMESTAMP,
	url VARCHAR(512) NOT NULL,
	visibility VARCHAR(16) NOT NULL,
	userId INT NOT NULL,
	FOREIGN KEY (userId) REFERENCES users (userId),
	CONSTRAINT ValidVisibility CHECK (visibility in ('Public', 'Private'))
);

-- Create the rest of your tables...

CREATE OR REPLACE TABLE score(
	scoreId INT NOT NULL AUTO_INCREMENT,
	photoId INT(11) NOT NULL,
	userId INT(11) NOT NULL,
	value FLOAT(5,0) NOT NULL,
	scoreDate DATE NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	PRIMARY KEY (scoreId),
	FOREIGN KEY (photoId) REFERENCES photos (photoId) ON DELETE CASCADE,
	FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE
	
);

CREATE OR REPLACE TABLE comnt(
	comntId INT NOT NULL AUTO_INCREMENT,
	userId INT(11) NOT NULL,
	photoId INT(11) NOT NULL,
	comntDate DATE NOT NULL,
	comntText VARCHAR(160) NOT NULL,
	PRIMARY KEY (comntId),
	FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE,
	FOREIGN KEY (photoId) REFERENCES photos(photoId) ON DELETE CASCADE 
	

);

CREATE OR REPLACE TABLE words(
	wordId INT NOT NULL AUTO_INCREMENT,
	text VARCHAR(20) NOT NULL,
	PRIMARY KEY (wordId)
);

